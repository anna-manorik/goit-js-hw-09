{"version":3,"sources":["js/03-promises.js"],"names":["delayInput","document","querySelector","stepInput","amountInput","form","createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","evt","preventDefault","Number","value","timerId","setInterval","then","console","log","catch","clearInterval"],"mappings":";AACA,MAAMA,EAAaC,SAASC,cAAc,UACpCC,EAAYF,SAASC,cAAc,SACnCE,EAAcH,SAASC,cAAc,WACrCG,EAAOJ,SAASC,cAAc,SAGpC,SAASI,EAAcC,EAAUC,GAExB,OAAA,IAAIC,QAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGlCH,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,MAO3BH,EAAKS,iBAAiB,SAAUC,IAC9BA,EAAIC,iBAEAR,IAAAA,EAAQS,OAAOjB,EAAWkB,OAC1BC,EAAU,KACVZ,EAAW,EAEfY,EAAUC,YAAY,KACpBZ,GAASS,OAAOd,EAAUe,OAGV,KAFhBX,GAAY,KAGVC,EAAQS,OAAOjB,EAAWkB,QAG5BZ,EAAcC,EAAUC,GACvBa,KAAK,EAAGd,SAAAA,EAAUC,MAAAA,MACjBc,QAAQC,2BAA2BhB,QAAeC,SAEnDgB,MAAM,EAAGjB,SAAAA,EAAUC,MAAAA,MAClBc,QAAQC,0BAA0BhB,QAAeC,SAGhDD,IAAaU,OAAOb,EAAYc,QACjCO,cAAcN,IAEfhB,EAAUe","file":"03-promises.48ebacdf.js","sourceRoot":"../src","sourcesContent":["\nconst delayInput = document.querySelector(\".delay\");\nconst stepInput = document.querySelector(\".step\");\nconst amountInput = document.querySelector(\".amount\");\nconst form = document.querySelector(\".form\");\n\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n\n  });\n}\n\n\nform.addEventListener(\"submit\", evt => {\n  evt.preventDefault();\n\n  let delay = Number(delayInput.value);\n  let timerId = null;\n  let position = 0;\n  \n  timerId = setInterval(() => {\n    delay += Number(stepInput.value);\n    position += 1;\n\n    if(position === 1){\n      delay = Number(delayInput.value);\n    }\n    \n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n    if(position === Number(amountInput.value)){\n      clearInterval(timerId);\n    }\n  }, stepInput.value);\n\n})\n\n"]}